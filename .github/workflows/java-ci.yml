name: java-ci

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH deploy keys
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.API_DEPLOY_KEY }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build with Maven
        id: mvn-tests
        run: mvn --batch-mode --update-snapshots verify
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2.5.0
        id: jacoco
        with:
          generate-branches-badge: true
          jacoco-csv-file: client/target/site/jacoco/jacoco.csv
          on-missing-report: fail
          generate-summary: true
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'Jigar Joshi'
            git config --global user.email 'jigarjm@users.noreply.github.com'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push --force 
          fi
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
      - name: Perform CodeQL Analysis
        id: codeql-scan
        uses: github/codeql-action/analyze@v2
      - name: Check on failures
        if: steps.mvn-tests.outcome != 'success' || steps.codeql-scan.outcome != 'success'
        run: exit 1