/*
 * Copyright 2022 Tigris Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.tigrisdata.db.jackson;

import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.introspect.Annotated;
import com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector;
import com.tigrisdata.db.annotation.TigrisField;
import com.tigrisdata.db.type.AutoGeneratedFields;

/** This class customizes the mapping of auto-generated fields to user models. */
public class TigrisAnnotationIntrospector extends NopAnnotationIntrospector {
  @Override
  public PropertyName findNameForDeserialization(Annotated ann) {
    return resolvePropertyName(ann);
  }

  @Override
  public PropertyName findNameForSerialization(Annotated ann) {
    return resolvePropertyName(ann);
  }

  private PropertyName resolvePropertyName(Annotated ann) {
    if (ann.hasAnnotation(TigrisField.class)
        && ann.getAnnotation(TigrisField.class).autoGeneratedFieldMapping()
            != AutoGeneratedFields.NONE) {
      return new PropertyName(
          ann.getAnnotation(TigrisField.class).autoGeneratedFieldMapping().getFieldName());
    } else {
      return super.findNameForDeserialization(ann);
    }
  }
}
